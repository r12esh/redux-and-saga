{"version":3,"sources":["components/MainHeader.jsx","components/ButtonSaveOrCancel.jsx","components/EntryForm.jsx","actions/entries.actions.js","actions/modas.actions.js","hooks/useEntryDetails.js","components/NewEntryForm.jsx","components/DisplayBalance.jsx","components/DisplayBalances.jsx","components/EntryLine.jsx","components/EntryLines.jsx","components/ModalEdit.jsx","App.jsx","reducers/entries.reducers.js","reducers/modals.reducers.js","sagas/entriesSagaAdd.js","sagas/entriesSaga.js","sagas/entriesSagaDeletion.js","store/configureStore.js","index.js","sagas/index.js"],"names":["MainHeader","type","value","Header","as","ButtonSaveOrCancel","addEntry","Button","Group","style","marginTop","Or","primary","onClick","EntryForm","description","isExpense","setIsExpense","setDescription","setValue","Form","unstackable","Input","label","width","icon","placeholder","onChange","e","target","iconPosition","Segment","compact","Checkbox","toggle","checked","entryTypes","GET_ENTRIES","POPULATE_ENTRIES","POPULATE_ENTRY_DETAILS","ADD_ENTRY","REMOVE_ENTRY","UPDATE_ENTRY","REMOVE_ENTRY_RESULT","addEntryRedux","payload","updateEntryRedux","id","entry","populateEntryDetails","modalTypes","OPEN_EDIT_MODAL","CLOSE_EDIT_MODAL","closeEditModal","useEntryDetails","desc","val","isExp","useState","dispatch","useDispatch","useEffect","updateEntry","resetData","v4","NewEntryForm","DisplayBalance","size","color","title","Statistic","Label","Value","DisplayBalances","totalIncome","totalExpenses","className","textAlign","Grid","columns","divided","Row","Column","EntryLine","Icon","name","cursor","openEditModal","bordered","removeEntryRedux","EntryLines","entries","Container","map","key","ModalEdit","isOpen","entryUpdate","Modal","open","Content","Actions","App","setTotalIncome","setTotalExpenses","totalBalance","setTotalBalance","setEntry","useSelector","state","modals","index","findIndex","parseFloat","entriesReducer","newState","initialEntry","action","concat","filter","modalsReducer","deleteEntrySaga","take","call","deleteEntry","put","axios","delete","getAllEntries","getEntryDetails","getAllEntriesDetails","console","log","get","result","data","length","fork","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleWares","store","createStore","composeWithDevTools","applyMiddleware","Object","values","entriesSaga","forEach","run","bind","entriesSagaAdd","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bcdb41e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Header } from 'semantic-ui-react'\r\n\r\n\r\nconst MainHeader = ({type=\"h1\",value}) => {\r\n  return (\r\n    <Header as={type}>{value}</Header>\r\n  )\r\n}\r\n\r\nexport default MainHeader\r\n","import React from 'react'\r\nimport {Button} from \"semantic-ui-react\"\r\n\r\nfunction ButtonSaveOrCancel({addEntry}) {\r\n  return (\r\n    <Button.Group style={{ marginTop: \"20px\" }}>\r\n      <Button>Cancel</Button>\r\n      <Button.Or />\r\n      <Button primary onClick={()=>addEntry() } > Ok </Button>\r\n    </Button.Group>\r\n  )\r\n}\r\n\r\nexport default ButtonSaveOrCancel\r\n","import React, { Fragment } from 'react'\r\nimport { Checkbox, Form, Segment } from 'semantic-ui-react'\r\n\r\nfunction EntryForm({description, value, isExpense,setIsExpense,setDescription,setValue}) {\r\n  return (\r\n    <Fragment>\r\n      <Form.Group unstackable>\r\n        <Form.Input\r\n          label=\"Description \"\r\n          width={12}\r\n          icon=\"tags\"\r\n          placeholder=\"Enter description\"\r\n          value={description}\r\n          onChange={(e)=>setDescription(e.target.value)}\r\n        >\r\n        </Form.Input>\r\n        <Form.Input\r\n          label=\"Value\"\r\n          width={4}\r\n          placeholder=\"100.00\"\r\n          icon=\"rupee\"\r\n          iconPosition=\"left\"\r\n          value={value}\r\n          onChange={(e)=>setValue(e.target.value)}\r\n          type=\"number\"\r\n        >\r\n        </Form.Input>\r\n      </Form.Group>\r\n      <Segment compact>\r\n        <Checkbox \r\n        onChange={()=>setIsExpense(!isExpense)} \r\n        label={isExpense ? \"Expense\" : \"Income\"} \r\n        toggle \r\n        checked={!isExpense}\r\n        />\r\n      </Segment>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EntryForm\r\n","const entryTypes = {\r\n  GET_ENTRIES: \"GET_ENTRIES\",\r\n  POPULATE_ENTRIES: \"POPULATE_ENTRIES\",\r\n  POPULATE_ENTRY_DETAILS: \"POPULATE_ENTRY_DETAILS\",\r\n  ADD_ENTRY: \"ADD_ENTRY\",\r\n  REMOVE_ENTRY: \"REMOVE_ENTRY\",\r\n  UPDATE_ENTRY: \"UPDATE_ENTRY\",\r\n  REMOVE_ENTRY_RESULT: \"REMOVE_ENTRY_RESULT\"\r\n}\r\n\r\nexport const addEntryRedux = (payload) => {\r\n  return { type: entryTypes.ADD_ENTRY, payload };\r\n}\r\n\r\nexport const removeEntryRedux = (id) => {\r\n  return { type: entryTypes.REMOVE_ENTRY, payload: id }\r\n}\r\n\r\nexport const updateEntryRedux = (id, entry) => {\r\n  return { type: entryTypes.UPDATE_ENTRY, payload: { id, entry } }\r\n}\r\n\r\nexport const getAllEntries = () => {\r\n  return { type: entryTypes.GET_ENTRIES }\r\n}\r\n\r\nexport const populateEntries = (entries) => {\r\n  return { type: entryTypes.POPULATE_ENTRIES, payload: entries }\r\n}\r\n\r\nexport const populateEntryDetails = (id, entry) => {\r\n  return { type: entryTypes.POPULATE_ENTRY_DETAILS, payload: { id, entry } }\r\n}\r\nexport default entryTypes;\r\n","const modalTypes = {\r\n  OPEN_EDIT_MODAL:\"OPEN_EDIT_MODAL\",\r\n  CLOSE_EDIT_MODAL:\"CLOSE_EDIT_MODAL\"\r\n}\r\n\r\nexport const openEditModal = (id) => {\r\n  return { type: modalTypes.OPEN_EDIT_MODAL, payload: { id } }\r\n}\r\n\r\nexport const closeEditModal = () => {\r\n  return { type: modalTypes.CLOSE_EDIT_MODAL }\r\n}\r\n\r\nexport default modalTypes;","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { v4 } from \"uuid\";\r\nimport { addEntryRedux, updateEntryRedux } from \"../actions/entries.actions\";\r\nimport { closeEditModal } from \"../actions/modas.actions\";\r\n\r\nconst useEntryDetails = (desc = \"\", val = \"\", isExp = true) => {\r\n  const [description, setDescription] = useState(desc);\r\n  const [value, setValue] = useState(val);\r\n  const [isExpense, setIsExpense] = useState(isExp);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setDescription(desc);\r\n    setValue(val);\r\n    setIsExpense(isExp);\r\n  }, [desc, val, isExp]\r\n  );\r\n\r\n  const updateEntry = (id) => {\r\n    dispatch(\r\n      updateEntryRedux(\r\n        id,\r\n        {\r\n          id,\r\n          description,\r\n          value,\r\n          isExpense,\r\n        }\r\n      )\r\n    );\r\n    dispatch(closeEditModal());\r\n    resetData();\r\n  }\r\n\r\n  const addEntry = () => {\r\n    dispatch(addEntryRedux({\r\n      id: v4(),\r\n      description,\r\n      value,\r\n      isExpense,\r\n    }))\r\n    resetData();\r\n  };\r\n\r\n  const resetData = () => {\r\n    setDescription(\"\");\r\n    setValue(\"\");\r\n    setIsExpense(true);\r\n  }\r\n\r\n  return {\r\n    description,\r\n    setDescription,\r\n    value,\r\n    setValue,\r\n    isExpense,\r\n    setIsExpense,\r\n    addEntry,\r\n    updateEntry,\r\n  }\r\n\r\n}\r\n\r\nexport default useEntryDetails;\r\n","import React from 'react';\r\nimport { Form } from 'semantic-ui-react';\r\nimport ButtonSaveOrCancel from './ButtonSaveOrCancel';\r\nimport EntryForm from './EntryForm';\r\nimport useEntryDetails from '../hooks/useEntryDetails';\r\n\r\nfunction NewEntryForm() {\r\n\r\n  const{\r\n    description,\r\n    setDescription,\r\n    value,\r\n    setValue,\r\n    isExpense,\r\n    setIsExpense,\r\n    addEntry,\r\n  } = useEntryDetails();\r\n  return (\r\n    <Form>\r\n      <EntryForm\r\n      description={description}\r\n      value={value}\r\n      isExpense={isExpense}\r\n      setIsExpense={setIsExpense}\r\n      setValue={setValue}\r\n      setDescription={setDescription}\r\n      />\r\n      \r\n      <ButtonSaveOrCancel \r\n      addEntry={addEntry} \r\n      />\r\n\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default NewEntryForm;\r\n","import React from 'react'\r\nimport { Statistic } from 'semantic-ui-react'\r\n\r\n\r\nfunction DisplayBalance({size=\"tiny\",color=\"black\",value,title}) {\r\n  return (\r\n\r\n    <Statistic color={color} size={size}>\r\n      <Statistic.Label>{title}</Statistic.Label>\r\n      <Statistic.Value>{value}</Statistic.Value>\r\n    </Statistic>\r\n\r\n  )\r\n}\r\n\r\nexport default DisplayBalance;\r\n","import React from 'react';\r\nimport { Segment, Grid } from 'semantic-ui-react';\r\nimport DisplayBalance from './DisplayBalance';\r\n\r\nfunction DisplayBalances({totalIncome, totalExpenses}) {\r\n  return (\r\n    <Segment className=\"haha\" textAlign=\"center\">\r\n      <Grid columns={2} divided>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <DisplayBalance color=\"green\" size=\"tiny\" title=\"Income\" value={`₹${totalIncome}`} />\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <DisplayBalance color=\"red\" size=\"tiny\" title=\"Expenses\" value={`₹${totalExpenses}`} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default DisplayBalances\r\n","import React, { Fragment } from 'react'\r\nimport { Grid, Icon, Segment } from 'semantic-ui-react'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { removeEntryRedux } from \"../actions/entries.actions\"\r\nimport { openEditModal } from '../actions/modas.actions';\r\n\r\nfunction EntryLine({ id, description, value, isExpense }) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment color={isExpense ? \"red\" : \"green\"}>\r\n        <Grid columns={3}>\r\n          <Grid.Row>\r\n            <Grid.Column width={10}>\r\n              {description}\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              {\"₹\" + value}\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Icon\r\n                name=\"edit\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => dispatch(openEditModal(id))}\r\n                bordered />\r\n              <Icon\r\n                name=\"trash\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => dispatch(removeEntryRedux(id))}\r\n                bordered />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EntryLine;\r\n","import React from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\nimport EntryLine from './EntryLine'\r\n\r\nfunction EntryLines({ entries }) {\r\n  return (\r\n    <Container>\r\n      {\r\n        entries.map((entry) => (\r\n          <EntryLine\r\n            {...entry}\r\n            key={entry.id}\r\n          />\r\n        ))\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default EntryLines\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, Button } from 'semantic-ui-react'\r\nimport { closeEditModal } from '../actions/modas.actions';\r\nimport useEntryDetails from '../hooks/useEntryDetails';\r\nimport EntryForm from './EntryForm'\r\n\r\nfunction ModalEdit({ isOpen, id, description, value, isExpense }) {\r\n  const dispatch = useDispatch();\r\n  const entryUpdate = useEntryDetails(description, value, isExpense);\r\n  return (\r\n    <Modal open={isOpen} >\r\n      <Modal.Header>\r\n        Edit Entry\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <EntryForm\r\n          description={entryUpdate.description}\r\n          value={entryUpdate.value}\r\n          isExpense={entryUpdate.isExpense}\r\n          setIsExpense={entryUpdate.setIsExpense}\r\n          setValue={entryUpdate.setValue}\r\n          setDescription={entryUpdate.setDescription}\r\n        />\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={() => dispatch(closeEditModal())} >\r\n          Close\r\n        </Button>\r\n        <Button onClick={() => entryUpdate.updateEntry(id)} primary >\r\n          Ok\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalEdit\r\n","import React, { useEffect, useState } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport MainHeader from './components/MainHeader';\nimport NewEntryForm from './components/NewEntryForm';\nimport DisplayBalance from './components/DisplayBalance';\nimport DisplayBalances from './components/DisplayBalances';\nimport EntryLines from './components/EntryLines';\nimport ModalEdit from './components/ModalEdit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllEntries } from './actions/entries.actions';\n\nfunction App() {\n  const [totalIncome, setTotalIncome] = useState(\"Loading\");\n  const [totalExpenses, setTotalExpenses] = useState(\"Loading\");\n  const [totalBalance, setTotalBalance] = useState(\"Loading\");\n  const [entry, setEntry] = useState();\n  const entries = useSelector(state => state.entries);\n  const { isOpen, id } = useSelector(state => state.modals);\n  const dispatch = useDispatch();\n\n\n  //useEffect hook FOR INITIAL ENTRIES TO FETCH FROM LOCAL SERVER\n  useEffect(()=>{\n    dispatch(getAllEntries())\n  },[dispatch])\n\n  //useEffect hook to load the Edit changes of Entry\n  useEffect(() => {\n    const index = entries.findIndex((entry) => entry.id === id);\n    setEntry(entries[index]);\n  }, [isOpen, id, entries]);\n\n  //useEffect hook for Total Money count on heading\n  useEffect(() => {\n    let totalIncome = 0;\n    let totalExpenses = 0;\n    let totalBalance = 0;\n    entries.map((entry) => {\n      if (entry.isExpense) {\n        totalExpenses += parseFloat(entry.value)\n      } else {\n        totalIncome += parseFloat(entry.value)\n      }\n      return 0;\n    });\n    totalBalance = totalIncome - totalExpenses;\n    setTotalBalance(totalBalance);\n    setTotalIncome(totalIncome);\n    setTotalExpenses(totalExpenses);\n  }, [entries])\n\n  return (\n\n    <Container>\n\n      <MainHeader type=\"h1\" value=\"Ritesh\" />\n      <DisplayBalance size=\"small\" title=\"Your balance\" value={`₹${totalBalance}`} />\n\n      <DisplayBalances totalExpenses={totalExpenses} totalIncome={totalIncome} />\n      <MainHeader type=\"h3\" value=\"History\" />\n\n      <EntryLines entries={entries} />\n\n      <MainHeader type=\"h3\" value=\"Add new transaction\" />\n      <NewEntryForm />\n      <ModalEdit isOpen={isOpen} {...entry} />\n\n    </Container>\n\n  );\n}\n\nexport default App;\n","import entryTypes from \"../actions/entries.actions\";\r\n\r\nconst entriesReducer = (state = initialEntry, action) => {\r\n  let newState;\r\n  switch (action.type) {\r\n    case entryTypes.POPULATE_ENTRIES:\r\n      return action.payload\r\n\r\n    case entryTypes.ADD_ENTRY:\r\n      newState = state.concat({ ...action.payload })\r\n      return newState;\r\n\r\n    case entryTypes.REMOVE_ENTRY_RESULT:\r\n      newState = state.filter(entry => entry.id !== action.payload)\r\n      return newState;\r\n\r\n    case entryTypes.POPULATE_ENTRY_DETAILS:\r\n    case entryTypes.UPDATE_ENTRY:\r\n      newState = [...state];\r\n      const index = state.findIndex(entry => entry.id === action.payload.id);\r\n      newState[index] = { ...newState[index], ...action.payload.entry };\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n\r\n  }\r\n}\r\nexport default entriesReducer;\r\n\r\nvar initialEntry = [];","import modalTypes from \"../actions/modas.actions\";\r\n\r\nconst modalsReducer = (state = { isOpen: false, id: null }, action) => {\r\n  switch (action.type) {\r\n    case modalTypes.OPEN_EDIT_MODAL:\r\n      return { ...state, isOpen: true, id: action.payload.id }\r\n    case modalTypes.CLOSE_EDIT_MODAL:\r\n      return { ...state, isOpen: false, id: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default modalsReducer;\r\n","import axios from \"axios\";\r\nimport { call, put, take } from \"redux-saga/effects\";\r\nimport entryTypes from \"../actions/entries.actions\";\r\n\r\nexport function* deleteEntrySaga() {\r\n  const { payload } = yield take(entryTypes.REMOVE_ENTRY);\r\n  yield call(deleteEntry, payload);\r\n  yield put({ type: \"REMOVE_ENTRY_RESULT\", payload })\r\n}\r\n\r\nfunction deleteEntry(id) {\r\n  axios.delete(`http://localhost:3001/entries/${id}`);\r\n  axios.delete(`http://localhost:3001/values/${id}`);\r\n  // await new Promise((s) => setTimeout(s, 3000))\r\n}\r\n","import axios from \"axios\";\r\nimport { call, fork, put, take } from \"redux-saga/effects\";\r\nimport entryTypes, { populateEntries, populateEntryDetails } from \"../actions/entries.actions\";\r\n\r\n\r\nexport function* getAllEntries() {\r\n  yield take(entryTypes.GET_ENTRIES);\r\n  console.log(\"I need to get Entries now\");\r\n  const result = yield call(axios.get, \"http://localhost:3001/entries\")\r\n  console.log(\"Saga ka data bc : \", result);\r\n  // yield put({ type: entryTypes.POPULATE_ENTRIES, payload: result.data })\r\n  yield put(populateEntries(result.data))\r\n\r\n}\r\n\r\nfunction* getEntryDetails(id) {\r\n  const { data } = yield call(axios, `http://localhost:3001/values/${id}`);\r\n  console.log(data);\r\n  // yield put({ type: entryTypes.POPULATE_ENTRY_DETAILS, payload: { id, entry: data } })\r\n  yield put(populateEntryDetails(id,data))\r\n}\r\n\r\nexport function* getAllEntriesDetails() {\r\n  const { payload } = yield take(entryTypes.POPULATE_ENTRIES);\r\n  for (let index = 0; index < payload.length; index++) {\r\n    const entry = payload[index];\r\n    yield fork(getEntryDetails, entry.id)\r\n\r\n  }\r\n}","import axios from \"axios\";\r\nimport { call, put, take } from \"redux-saga/effects\";\r\nimport entryTypes from \"../actions/entries.actions\";\r\n\r\nexport function* deleteEntrySaga() {\r\n  const { payload } = yield take(entryTypes.REMOVE_ENTRY);\r\n  yield call(deleteEntry, payload);\r\n  // yield put({ type: \"REMOVE_ENTRY_RESULT\", payload })\r\n}\r\n\r\nfunction deleteEntry(id) {\r\n  axios.delete(`http://localhost:3001/entries/${id}`);\r\n  axios.delete(`http://localhost:3001/values/${id}`);\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport entriesReducer from \"../reducers/entries.reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport modalsReducer from \"../reducers/modals.reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { initSagas } from \"../sagas\";\r\n// import { testSaga } from \"../sagas/testSaga\";\r\n\r\nconst rootReducer = combineReducers({\r\n  entries: entriesReducer,\r\n  modals: modalsReducer,\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleWares = [sagaMiddleware];\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(...middleWares))\r\n  );\r\n  initSagas(sagaMiddleware);\r\n  // sagaMiddleware.run(testSaga);\r\n  return store;\r\n};\r\n\r\n// Another way of doing the configureStore is as Follows:\r\n// const configureStore = () =>{\r\n//   return compose(\r\n//     applyMiddleware(sagaMiddleware),\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//     )(createStore)(rootReducer)\r\n// };\r\n\r\nexport default configureStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport \"semantic-ui-css/semantic.min.css\";\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// import * as testSaga from \"./testSaga\";A\r\nimport * as entriesSagaAdd from \"./entriesSagaAdd\";\r\nimport * as entriesSaga from \"./entriesSaga\";\r\nimport * as deleteEntrySaga from \"./entriesSagaDeletion\"\r\nexport function initSagas(sagaMiddleware) {\r\n  // Object.values(testSaga).forEach(sagaMiddleware.run.bind(sagaMiddleware))\r\n  Object.values(entriesSaga).forEach(sagaMiddleware.run.bind(sagaMiddleware))\r\n  Object.values(deleteEntrySaga).forEach(sagaMiddleware.run.bind(sagaMiddleware))\r\n  Object.values(entriesSagaAdd).forEach(sagaMiddleware.run.bind(sagaMiddleware))\r\n}\r\n"],"sourceRoot":""}